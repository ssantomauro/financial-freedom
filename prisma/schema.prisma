// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model - synced with Supabase Auth
// Note: Supabase manages authentication in auth.users table
// This is your application's user profile table
model User {
  id            String   @id @default(uuid()) @db.Uuid
  email         String   @unique
  name          String?
  emailVerified Boolean  @default(false)

  // Auth provider info
  provider      String?  // 'email', 'google', 'apple'
  supabaseId    String?  @unique // Supabase auth.users.id reference

  // Subscription status
  hasLifetimeAccess Boolean  @default(false)
  subscriptionDate  DateTime?

  // Relations
  calculations  Calculation[]

  // Timestamps
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([email])
  @@index([supabaseId])
  @@map("users")
}

// Calculation model - stores all calculator submissions
model Calculation {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String   @db.Uuid
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Calculator type identifier
  calculatorType String  // e.g., 'buy-vs-rent', 'compound-interest', 'retirement'

  // Input data stored as JSON
  inputData     Json

  // Result data stored as JSON
  resultData    Json?

  // Timestamps
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
  @@index([calculatorType])
  @@index([userId, calculatorType])
  @@map("calculations")
}
